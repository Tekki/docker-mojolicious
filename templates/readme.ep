%= $warning

# What is Mojolicious?

%= $global->{description}

The images are based on <%= $from %> and provide Mojolicious installed together with
%= join(",\n", map {"[$_](https://metacpan.org/pod/$_)"} $global->{perl_modules}->@*) . '.'

# Supported tags and respective Dockerfile links

* Mojolicious: <%= $main->{dockerfile}->{link} %>

* Mojolicious with Mojo::mysql and the MariaDB libraries: <%= $mariadb->{dockerfile}->{link} %>

* Mojolicious with Mojo::mysql and the MySQL libraries: <%= $mysql->{dockerfile}->{link} %>

* Mojolicious with Mojo::Pg: <%= $pg->{dockerfile}->{link} %>

* Mojolicious with Mojo::SQLite: <%= $sqlite->{dockerfile}->{link} %>

`mariadb` and `mysql` both include DBD::MariaDB and DBD::mysql. The difference
is in the C libraries they are built with.

# How to use this image

## Simple application

Go to your code folder, call Mojolicious to create the basic application
structure with you as the owner.

    $ docker container run --rm -u $UID -v "$(pwd):/usr/src/app" tekki/mojolicious mojo generate app MyApp

Start the application as daemon.

    $ cd my_app
    $ docker container run -d --rm -v "$(pwd):/usr/src/app" -p 3000:3000 tekki/mojolicious morbo script/my_app

To run the container in the foreground and read the output, omit the `-d`.

    $ docker container run --rm -v "$(pwd):/usr/src/app" -p 3000:3000 tekki/mojolicious morbo script/my_app

Browse to [localhost:3000](http://localhost:3000) and edit the code in the
current folder. If you are on Linux or MacOS, the server will restart whenever
you change a file. On Windows this works if you use Docker Desktop with WSL 2.

The application inside the container always has to run in the foreground. For
hypnotoad use the `-f` flag.

    $ docker container run -d --rm -v "$(pwd):/usr/src/app" -p 8080:8080 tekki/mojolicious hypnotoad -f script/my_app

# Source

The source of this image on [GitHub](https://github.com/Tekki/docker-mojolicious).
